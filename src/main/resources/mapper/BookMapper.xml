<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="capstone_project.ReadingForum_Backend.Dao.BookDao">
    <select id="selectAll" resultType="capstone_project.ReadingForum_Backend.Model.Book">
        select * from book where deleted=0
    </select>

    <select id="selectAllByPage" resultType="capstone_project.ReadingForum_Backend.Model.Book">
        select id,name,book_cover,author,publisher from book where deleted=0 limit #{start},16
    </select>

    <select id="selectAllNumByPage" resultType="int">
        select count(*) from book where deleted=0
    </select>

    <select id="selectById" resultType="capstone_project.ReadingForum_Backend.Model.Book">
        select * from book where id=#{id} and deleted=0
    </select>

    <select id="selectByNamePublisher" resultType="capstone_project.ReadingForum_Backend.Model.Book">
        select * from book where name=#{name} and publisher=#{publisher} where deleted=0
    </select>

    <select id="selectFavouriteByPage" resultType="capstone_project.ReadingForum_Backend.Model.Book">
        select id,name,book_cover,author,publisher from book where id in (select book_id from favourite where user_id=#{id}) and deleted=0 limit #{start},16
    </select>

    <select id="selectFavouriteNum" resultType="int">
        select count(*) from favourite where user_id=#{id}
    </select>

    <select id="selectTopTen" resultType="capstone_project.ReadingForum_Backend.Model.Book">
        select book.id,book.name,book.book_cover,book.author,book.publisher,count(favourite.user_id) as stars from book left join favourite on book.id=favourite.book_id group by book.id order by stars desc limit 10
    </select>

    <select id="selectLatestFive" resultType="capstone_project.ReadingForum_Backend.Model.Book">
        select * from book where deleted=0 order by id desc limit 5
    </select>

    <select id="selectTopFiveByTag" resultType="capstone_project.ReadingForum_Backend.Model.Book">
        select b.id,b.name,b.book_cover,b.author,b.publisher,count(favourite.user_id) as stars from (select * from book as a where a.id in (select book_id from book_tag where tag_id=#{tagId})) as b left join favourite on b.id=favourite.book_id group by b.id order by stars desc limit 5
    </select>

    <select id="selectBookByTagPage" resultType="capstone_project.ReadingForum_Backend.Model.Book">
        select id,name,book_cover,author,publisher from book where id in (select book_id from book_tag where tag_id=#{tagId}) and deleted=0 limit #{start},16
    </select>

    <select id="selectBookNumByTagPage" resultType="int">
        select count(*) from book where id in (select book_id from book_tag where tag_id=#{tagId}) and deleted=0
    </select>

    <select id="searchBook" resultType="capstone_project.ReadingForum_Backend.Model.Book">
        select id,name,book_cover,author,publisher from book where name like #{keyword} or author like #{keyword} or publisher like #{keyword} or ISBN like #{keyword} and deleted=0 limit #{start},16
    </select>

    <select id="searchBookNum" resultType="int">
        select count(*) from book where name like #{keyword} or author like #{keyword} or publisher like #{keyword} or ISBN like #{keyword} and deleted=0
    </select>

    <insert id="insert">
        insert into user (name, author, publisher, publish_time, ISBN, author_introduction, book_introduction) values (#{name}, #{author}, #{publisher}, #{publish_time}, #{ISBN}, #{author_introduction}, #{book_introduction})
    </insert>

    <update id="update">
        update user set name=#{name}, author=#{author}, publisher=#{publisher}, publish_time=#{publish_time}, ISBN=#{ISBN}, author_introduction=#{author_induction}, book_introduction=#{book_introduction}, deleted=#{deleted} where id=#{id}
    </update>
</mapper>